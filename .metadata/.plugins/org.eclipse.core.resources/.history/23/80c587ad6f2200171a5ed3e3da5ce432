package dao;
import dao.DBC;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import beans.OrderBean;

public class OrderDAO {
	
	private DBC dbc;//连接的基类
	private Statement ostmt;//用于更新数据库
	private ResultSet orest;//查询结果集

	public OrderDAO(){
		dbc=new DBC();
		ostmt=dbc.creStatement();
		orest=null;
	}
	
	public boolean addOrder(OrderBean oder){
		int rowCount=0;
		if(oder!=null){
			try{
				rowCount=ostmt.executeUpdate("insert into orders(uID,aID,oTime,oBookIDs," +
						"oBookNums,oStatus) values(" +
						oder.getuID()+","+oder.getaID()+",'"+oder.getoTime()+"','"+oder.getoBookIDs()+"',"+
						"'"+oder.getoBookNums()+"','"+oder.getoStatus()+"'"+
						")");
			}catch(SQLException e){
				e.printStackTrace();
			}
		}
		return rowCount==0?false:true;
	}
	
	public boolean delOrder(Integer oID){
		int rowCount=0;
		try{
			if(oID!=null){
				rowCount=ostmt.executeUpdate("delete from orders where oID = "+oID);
			}
		}catch(SQLException e){
			e.printStackTrace();
		}
		return rowCount==0?false:true;
	}

	public boolean updateOrder(OrderBean oder){
		int rowCount=0;
		if(oder!=null && !DBC.isNullOrEmpty(oder.getoID())){
			try{
				rowCount=ostmt.executeUpdate("update orders set "+
						"uID="+book.getbTitle()+",aID="+book.getbAuthor()+",oTime='"+
						book.getbDescription()+"',oBookIDs='"+book.getbCount()+"',oBookNums='"+book.getbPublisher()+
						"',oStatus='"+book.getbLanguage()+"'"+" where oID="+oder.getoID());
			}catch(SQLException e){
				e.printStackTrace();
			}
		}
		return rowCount==0?false:true;
	}
	
	public void findOrder(){
		
	}
	
	public void CloseBookDAO(){
		orest=null;
		ostmt=null;
		dbc.CloseAll();
	}
}
